print(100 * 5 + 40 * 8)
# Pythonでは"*"、"/"が優先して計算される

print((100 * 5) + (40 * 8))
# 式を()で囲むと優先して計算される
# "Shift + Enter"でその行のコード"だけ"実行される

# Pythonで使える演算
# 足し算
print(1 + 1)

# 引き算
print(1 - 1)

# 掛け算
print(1 * 2)

# 割り算
print(2 / 2)
# 割り算は整数同士でもfloat型で出力される

# 余り
print(5 % 3)
print(2 % 2)

# べき乗
print(1 ** 2)
print(2 ** 2)

print(100 + -99)
# 負の値は数字の前に-を付ける
# 見にくいと感じたら負の項に()を付ける

# 実数（小数点第一位以下が記述されてる数字）はfloat型と呼ばれる

print(10 + 20.0)
# 整数とfloat型の数字を計算すると結果はfloat型になる

# 整数除算
print(3 // 2)
# //で割り算をすると小数点以下が切り捨てになる

print(3.0 // 2.0)
# float型同士でも小数点以下切り捨てになる

print(100 * 5 + 40 * 8 + 80 * 5 + 60 * 10 + 90 * 20 + 110 * 10)

# 変数と代入文
# 計算結果に名前をつけて参照できる(変数)
# 変数は数学の”=”は”等しい”という意味ではない
# 変数は後勝ち（同じ単語でも後の方が優先して表示される）
# ”変数 = 式”の並びにしないと動かない

price = 100 + 1
print(price)
price = price + 2

# 'abcdefg' = alphabet
# print(alphabet)
#これだと動かない（変数は必ず左項）

distance = 100
time = 2
speed = distance / time
print(speed)

# 単位を付けたい場合は別途で単位を表示させる処理が必要
# 単位が付いているデータを計算したい場合は単位を除外する必要がある

# pythonのバージョンを表示させる
# powershellの場合 "py --version"
# "--"の後はスペースを入れない

# 複数の単語を含む変数を設定したい場合は単語の間に"_"（アンダースコア）を入れる
# スネークケースと呼ぶ
# 頭に数字は使えない
# ひらがなや漢字も一応使える
# if , while , raiseなど用途が決まっている単語は使えない(予約語)
# 記号も使えない